// CSS3 Flexible Box Model and property defaults

// Custom shorthand notation for flexbox
@mixin box($orient: inline-axis, $pack: start, $align: stretch) {
  @include display-box;
  @include box-orient($orient);
  @include box-pack($pack);
  @include box-align($align);
}

@mixin display-box {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox; // IE 1
  display: box;
}

@mixin box-orient($orient: inline-axis) {
// horizontal|vertical|inline-axis|block-axis|inherit
  @include prefixer(box-orient, $orient, webkit moz spec);
}

@mixin box-pack($pack: start) {
// start|end|center|justify
  @include prefixer(box-pack, $pack, webkit moz spec);
  -ms-flex-pack: $pack; // IE 1
}

@mixin box-align($align: stretch) {
// start|end|center|baseline|stretch
  @include prefixer(box-align, $align, webkit moz spec);
  -ms-flex-align: $align; // IE 1
}

@mixin box-direction($direction: normal) {
// normal|reverse|inherit
  @include prefixer(box-direction, $direction, webkit moz spec);
  -ms-flex-direction: $direction; // IE 1
}

@mixin box-lines($lines: single) {
// single|multiple
  @include prefixer(box-lines, $lines, webkit moz spec);
}

@mixin box-ordinal-group($int: 1) {
  @include prefixer(box-ordinal-group, $int, webkit moz spec);
  -ms-flex-order: $int; // IE 1
}

@mixin box-flex($value: .) {
  @include prefixer(box-flex, $value, webkit moz spec);
  -ms-flex: $value; // IE 1
}

@mixin box-flex-group($int: 1) {
  @include prefixer(box-flex-group, $int, webkit moz spec);
}

// CSS3 Flexible Box Model and property defaults
// Unified attributes for 29, 211, and 212 flavours.

// 29 - display (box | inline-box)
// 211 - display (flexbox | inline-flexbox)
// 212 - display (flex | inline-flex)
@mixin display($value) {
//  flex | inline-flex
    @if $value == "flex" {
        // 29
        display: -webkit-box;
        display: -moz-box;
        display: box;

        // 212
        display: -webkit-flex;
        display: -moz-flex;
        display: -ms-flexbox; // 211 (IE 1)
        display: flex;
    }

    @elseif $value == "inline-flex" {
        display: -webkit-inline-box;
        display: -moz-inline-box;
        display: inline-box;

        display: -webkit-inline-flex;
        display: -moz-inline-flex;
        display: -ms-inline-flexbox;
        display: inline-flex;
    }

    @else {
        display: $value;
    }
}

// 29 - box-flex (integer)
// 211 - flex (decimal | width decimal)
// 212 - flex (integer integer width)
@mixin flex($value) {

    // Grab flex-grow for older browsers.
    $flex-grow: nth($value, 1);

    // 29
    @include prefixer(box-flex, $flex-grow, webkit moz spec);

    // 211 (IE 1), 212
    @include prefixer(flex, $value, webkit moz ms spec);
}

// 29 - box-orient ( horizontal | vertical | inline-axis | block-axis)
//      - box-direction (normal | reverse)      
// 211 - flex-direction (row | row-reverse | column | column-reverse)
// 212 - flex-direction (row | row-reverse | column | column-reverse)
@mixin flex-direction($value: row) {

    // Alt values.
    $value-29: $value;
    $value-211: $value;
    $direction: "normal";

    @if $value == row {
        $value-29: horizontal;
    }

    @elseif $value == "row-reverse" {
        $value-29: horizontal;
        $direction: reverse;
    }

    @elseif $value == column {
        $value-29: vertical;
    }

    @elseif $value == "column-reverse" {
        $value-29: vertical;
        $direction: reverse;
    }

    // 29
    @include prefixer(box-orient, $value-29, webkit moz spec);
    @if $direction == "reverse" {
        @include prefixer(box-direction, $direction, webkit moz spec);
    }

    // 212
    @include prefixer(flex-direction, $value, webkit moz spec);

    // 211 (IE 1)
    -ms-flex-direction: $value;
}

// 29 - box-lines (single | multiple)
// 211 - flex-wrap (nowrap | wrap | wrap-reverse)
// 212 - flex-wrap (nowrap | wrap | wrap-reverse)
@mixin flex-wrap($value: nowrap) {

    // Alt values.
    $alt-value: $value;
    @if $value == nowrap {
        $alt-value: single;
    }

    @elseif $value == wrap {
        $alt-value: multiple;
    }

    @elseif $value == "wrap-reverse" {
        $alt-value: multiple;
    }

    @include prefixer(box-lines, $alt-value, webkit moz spec);
    @include prefixer(flex-wrap, $value, webkit moz ms spec);
}

// 29 - TODO: parse values into flex-direction/flex-wrap
// 211 - TODO: parse values into flex-direction/flex-wrap
// 212 - flex-flow (flex-direction || flex-wrap)
@mixin flex-flow($value) {
    @include prefixer(flex-flow, $value, webkit moz spec);
}

// 29 - box-ordinal-group (integer)
// 211 - flex-order (integer)
// 212 - order (integer)
@mixin order($int: ) {
    // 29
    @include prefixer(box-ordinal-group, $int, webkit moz spec);

    // 212
    @include prefixer(order, $int, webkit moz spec);

    // 211 (IE 1)
    -ms-flex-order: $int;
}

// 212 - flex-grow (number)
@mixin flex-grow($number: ) {
    @include prefixer(flex-grow, $number, webkit moz spec);
    -ms-flex-positive: $number;
}

// 212 - flex-shrink (number)
@mixin flex-shrink($number: 1) {
    @include prefixer(flex-shrink, $number, webkit moz spec);
    -ms-flex-negative: $number;
}

// 212 - flex-basis (number)
@mixin flex-basis($width: auto) {
    @include prefixer(flex-basis, $width, webkit moz spec);
    -ms-flex-preferred-size: $width;
}

// 29 - box-pack (start | end | center | justify)
// 211 - flex-pack (start | end | center | justify)
// 212 - justify-content (flex-start | flex-end | center | space-between | space-around)
@mixin justify-content ($value: flex-start) {

    // Alt values.
    $alt-value: $value;
    @if $value == "flex-start" {
        $alt-value: start;
    }

    @elseif $value == "flex-end" {
        $alt-value: end;
    }

    @elseif $value == "space-between" {
        $alt-value: justify;
    }

    @elseif $value == "space-around" {
        $alt-value: center;
    }

    // 29
    @include prefixer(box-pack, $alt-value, webkit moz spec);

    // 212
    @include prefixer(justify-content, $value, webkit moz ms o spec);

    // 211 (IE 1)
    -ms-flex-pack: $alt-value;
}

// 29 - box-align (start | end | center | baseline | stretch)
// 211 - flex-align (start | end | center | baseline | stretch)
// 212 - align-items (flex-start | flex-end | center | baseline | stretch)
@mixin align-items($value: stretch) {

    $alt-value: $value;

    @if $value == "flex-start" {
        $alt-value: start;
    }    

    @elseif $value == "flex-end" {
        $alt-value: end;
    }

    // 29
    @include prefixer(box-align, $alt-value, webkit moz spec);

    // 212
    @include prefixer(align-items, $value, webkit moz ms o spec);
    
    // 211 (IE 1)
    -ms-flex-align: $alt-value;    
}

// 211 - flex-item-align (auto | start | end | center | baseline | stretch)
// 212 - align-self (auto | flex-start | flex-end | center | baseline | stretch)
@mixin align-self($value: auto) {

    $value-211: $value;
    @if $value == "flex-start" {
        $value-211: start;
    }    

    @elseif $value == "flex-end" {
        $value-211: end;
    }

    // 212
    @include prefixer(align-self, $value, webkit moz spec);

    // 211 (IE 1)
    -ms-flex-item-align: $value-211;
}

// 211 - flex-line-pack (start | end | center | justify | distribute | stretch)
// 212 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)
@mixin align-content($value: stretch) {

    $value-211: $value;
    @if $value == "flex-start" {
        $value-211: start;
    }    

    @elseif $value == "flex-end" {
        $value-211: end;
    }

    @elseif $value == "space-between" {
        $value-211: justify;
    }

    @elseif $value == "space-around" {
        $value-211: distribute;
    }

    // 212
    @include prefixer(align-content, $value, webkit moz spec);

    // 211 (IE 1)
    -ms-flex-line-pack: $value-211;
}

